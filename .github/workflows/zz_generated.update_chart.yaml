# DO NOT EDIT. Generated with:
#
#    devctl
#
#    https://github.com/giantswarm/devctl/blob/8960b8810d2fdb97543d84baa8b50ffa40da26a9/pkg/gen/input/workflows/internal/file/update_chart.yaml.template
#

#
# This workflow creates a PR with changes pulled from upstream repo using the `make update-chart` command.
# It also updates the Chart.yaml dependencies on local subcharts update.

name: Create Update Chart PR
on:
  push:
  #  branches:
  #    - 'main#update-chart'
  #    - 'master#update-chart'
  workflow_dispatch:
    inputs:
      branch:
        required: true
        type: string
  schedule:
    # At 09:00 on Monday.
    - cron:  '0 9 * * 1'

jobs:
  debug_info:
    name: Debug info
    runs-on: ubuntu-22.04
    steps:
      - name: Print github context JSON
        run: |
          cat <<EOF
          ${{ toJson(github) }}
          EOF
  gather_facts:
    name: Gather facts
    runs-on: ubuntu-22.04
    outputs:
      repo_name: ${{ steps.gather_facts.outputs.repo_name }}
      branch: ${{ steps.gather_facts.outputs.branch }}
      base: ${{ steps.gather_facts.outputs.base }}
      skip: ${{ steps.pr_exists.outputs.skip }}
    steps:
      - name: Gather facts
        id: gather_facts
        run: |
          head="${{ inputs.branch || github.event.ref }}"
          echo "branch=${head}" >> $GITHUB_OUTPUT

          head="${head#refs/heads/}" # Strip "refs/heads/" prefix.
          if [[ $(echo "$head" | grep -o '#' | wc -l) -ge 1 ]]; then
            base="$(echo $head | cut -d '#' -f 1)"
          else
            base="${{ github.event.base_ref }}"
          fi

          base="${base#refs/heads/}" # Strip "refs/heads/" prefix.

          repo_name="$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')"
          echo "repo_name=\"$repo_name\" base=\"$base\" head=\"$head\""
          echo "repo_name=${repo_name}" >> $GITHUB_OUTPUT
          echo "base=${base}" >> $GITHUB_OUTPUT
          echo "head=${head}" >> $GITHUB_OUTPUT
  create_update_pr:
    name: Create update PR
    runs-on: ubuntu-22.04
    needs:
      - gather_facts
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ needs.gather_facts.outputs.branch }}
      - name: Run update
        run: |
          # Define chart_dir
          repository="${{ needs.gather_facts.outputs.repo_name }}"
          chart="helm/${repository}"

          # Check chart directory.
          if [ ! -d "${chart}" ]
          then
            echo "Could not find chart directory '${chart}', removing app suffix."

            # Remove app suffix.
            chart="helm/${repository%-app}"

            if [ ! -d "${chart}" ]
            then
              # Print error.
              echo "Could not find chart directory '${chart}', doing nothing."
              exit 1
            fi
          fi

          make update-chart APPLICATION="${chart}"
      - name: Push changes
        env:
          GITHUB_TOKEN: "${{ secrets.TAYLORBOT_GITHUB_ACTION }}"
          head: "${{ needs.gather_facts.outputs.branch }}"
        run: |
          if git diff --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          # Setup git identify
          git config --local user.email "dev@giantswarm.io"
          git config --local user.name "taylorbot"

          # Commit and push changes
          git checkout -b automated-update
          git add -A
          git commit -m "Automated update from upstream"
          git push --force --set-upstream origin HEAD:automated-update

          # Create PR
          gh pr create --title "Automated update from upstream" --assignee "${{ github.actor }}" --base "${{ env.head }}" --body-file - << EOF
          This PR was created by the \`update-chart\` GitHub Actions workflow.
          - [ ] **:warning: All tests are passing**
          - [ ] **:warning: The CHANGELOG.md file has been updated**
          - [ ] **:warning: Additional changes in ignored files (see vendir.yml) have been adapted and migrated**
          EOF
